CatherineTLDRch4

Chapter 4 - Network Layer
	4.1 - Overview of Network Layer
		- network layer protocols in every host and router
		- router looks at headers in datagrams that pass through

		Forwarding: move packet from input to correct output
		Routing: Determine how packet goes from src to dest

		4.1.1 - Data Plane
			- Local & per router
			- Determine where to put received datagram on output port
			- does forwaring

		4.1.2 - Control Plane
			- Network wide logic
			- Determine how datagram routed

			2 approaches
			- traditionally implemented in routers
				- routing algorithm in every router in control plane.
			- decentralised SDN (software defined networking) to do computation.
				- distinct remote server interacts with routers.

		Network Service Model 
			[DONT EVEN KNOW]

	4.2 - Inside Router
		Architecture overview
			Input Ports

			Output Ports

			Routing Processor
				- routing and management 
				- software level, works in ms

			High-Seed Switching Fabric
				- forwarding
				- hardware level, works in ns

		Input Port
			[line terminate]
				- physical layer

			[link layer protocol]
				- link layer

			[lookup forwaring + queuing]
				Decentralised Switching
					- uses header values to determine how to put into fabric
					- has queue if datagram arrive faster than forwarding rate

					Destination forwarding
					- look at destIP address

					Generalised Forwarding
					- based off other header field values

			[switch fabric]
				- transfer packet from input buffer to output buffer

				3 types:
				- memory
					- controlled with CPU
					- packet copied to memory (therefore limited by it)
					- 2 bus crossing per datagram

				- bus
					- move datagram from input to output through shared bus
					- limited by bus bandwidth
					- 32Gb/s good enough

				- crossbar
					- no bus limitation
					- look like kb matrix

		Longest Prefix Matching
			- Used when looking for forwarding table entry for dest addr
			- Done using TCAM (ternary content addressable memories)

		Input Port Queuing
			- queue may occur when fbric slower than input ports combined

			- HOL Head of Line blocking: datagram in queue stop others from moving up.

		Output Port Queuing
			- buffering required from fabric otherwise packets may be lost
			- occur when arrival rate from switch exceeds output line speed
			- need to schedule these packets too (net neutrality, performance equality)

			[BUFFERING EQUATION]

		Scheduling
			- choosing next packet to send

			FIFO scheduling
			- send first packet to come
			- discarding if buffer full:
				- last one to arrive
				- random one
				- based on priority value

			Priority Scheduling
			- send highest priority packet
			- not net neutral
			- dependant on header, destination or another field

			Round robin
			- multiple classes
			- try and send one complete packet from each class

			Weighted Fair Queuing
			- Generalised round robin
			- each class gets a weighting
			- then send trying to weigh things equally.

	4.3 - Internet Protocol
		General
			- IP protocol
				- network layer
				- addressing conventions
				- datagram format
				- packet handling convention

		4.3.1 - Datagram Format
			Overhead:
			- 20 bytes tcp
			- 20 bytes IP
			therefore 40 bytes of application layer overhead

		4.3.2 - Fragmentation
			- can't ignore the fact that network link has maximum transfer size.
			- therefore large packets need to be split up further when sent
			- there packets are only reassembled at dest
			- IP header bits used to identify fragments

		4.3.3 - IPv4 Addressing
			4.3.3.1 - Introduction
				- IP address is 32 bit number (for host router interface)
				- Interface is connection between host/router and physical links
					- router have many interfaces
					- host usually has one/two
				- IP addresses associated with each interface

			4.3.3.2 - Subnets
				IP address
				- high order = subnet bits
				- low order = host bits

				Subnet: devices interfacing with subnet part of IP address
				- physically reach each other withing intervening router

				each isolated network is a subnet


			4.3.3.3 - IP addressing CIDR & DHCP
				Classless InterDomain Routing

				123.123.123/24 means that 24 prefix bits signify subnet and last 8 bits are for others

				DHCP = Dynamic Host Configuration Protocol
				Goal: allow host to dynamically get IP address when connecting to network
				- Plug and play

				Process:
				- DHCP discover
					- new host send message to all saying they would like to connect.
				- DHCP offer
					- returns available IP addresses
				- DHCP request
					- new host requests one of those IP addresses
				- DHCP ACK
					- server acknowledges that request and gives them that address

				DHCP also:
				- address of FIRST-HOP
				- name & IP of local DNS
				- network mask (showing host portion of IP address)

			4.3.3.4 - Heirarchical addressing
				- due to subnet having x/y then can find out best match by matching as many digits as possible if looking for range of addresses

				- ICANN = Internet Corp for Assignment Names and Numbers
				- allocate addresses
				- manage DNS
				- assignment of domain names

		4.3.4 - Network Address Translation
			- using port numbers to emulate more IP addresses from a single router's IP address.
			- bandaid solution

			- lets you change IP address of local devices without letting outside know.
			- change main IP address without changing local Ip addresses

			- pairing of: (both ways)
			outsideIP, port -> LAN IP, port

			- since port numbers are 16bit, can accomodate 60k connections with one external IP address

			Controversy
			- router should only process up to layer 3 of internet stack.
			- violate end-to-end
			- IPv6 should be thing that solves this problem

		4.3.5 - IPv6
			General
				- 32bit address space on IPv4 running out.
				- is now fixed length 40 byte header, with no fragmentation

			4.3.5.1 - Datagram Format
				- has priority
				- flow label
				- next header: upper layer data protocl

				from IPv4:
				- removed checksum completely. Reducing processing time
				- options allowed, outside of header though
				- ICMP updated with new msg types

			4.3.5.2 - IPv4 to IPv6
				- Not all routers can be instantly upgraded
				- IPv6 made to be backwards compatible, through tunneling

			4.3.5.3 - Tunneling
				- Using IPv4 (and fragmentation) infrastructure to do IPv6.
				- Wrap IPv6 stuff in IPv4

			4.3.5.4 - Adoption of IPv6
				- 8% of google clients use it
				- gonna take a long time.

	4.4 - Generalised Forward and SDN
		- routers have flow table generated by decentralised entity
		- OpenFlow example of something htat does this. 
		- predominantly uses pattern matching

		Pattern: match values in packet header
		Actions: [drop, forward, modify] on matched packets
		Priority: Something about overlapping patterns
		Counters: #bytes and #packets

		Structure
		| rules | actions | stats |

		rules:
		- Switch port
		- VLAN ID
		- MAC src
		- MAC dst
		- Eth type
		- IP src
		- IP dst
		- IP prot
		- TCP sport
		- TCP dport

		actions:
		- Forward packet to port
		- Encapsulate and forward
		- drop
		- send to processing pipeline
		- modify fields

		stats:
		- #bytes
		- #packets